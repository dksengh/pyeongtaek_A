import cv2
import os
import tkinter as tk
from tkinter import simpledialog
from ultralytics import YOLO, solutions

# YOLO 모델 로드
model = YOLO("yolov8x.pt")

# GUI 창을 통해 사용자 입력 받기
def get_inputs():
    root = tk.Tk()
    root.title("입력 창")
    root.geometry("300x150")
    
    tk.Label(root, text="넓이:").grid(row=0, column=0)
    tk.Label(root, text="기울기:").grid(row=1, column=0)
    
    width_entry = tk.Entry(root)
    angle_entry = tk.Entry(root)
    width_entry.grid(row=0, column=1)
    angle_entry.grid(row=1, column=1)
    
    def submit():
        global width, angle
        width = float(width_entry.get())
        angle = float(angle_entry.get())
        root.destroy()
    
    tk.Button(root, text="확인", command=submit).grid(row=2, columnspan=2)
    root.mainloop()

# 사용자 입력 받기
width, angle = 0, 0
get_inputs()

# 입력값 출력
print(f"입력된 값 - 넓이: {width}, 기울기: {angle}")

# 이미지 파일 경로 설정
image_path = './project/Dublin, Ireland.png'

# 모델 예측 수행
results = model(image_path)

def filter_person(results):
    """ person (class 0)만 필터링 """
    person = []
    for result in results:
        for box in result.boxes:
            if int(box.cls) == 0:  # class 0: person
                person.append(box.xyxy.tolist()[0])
    return person

# person만 추출
person_boxes = filter_person(results)

# 감지된 person 객체 수
person_count = len(person_boxes)

# 안전 상태 결정
if angle < 34.99:
    if person_count <= width:
        status = "\033[92m안전\033[0m"  # 초록색
    elif person_count <= width*1.5:
        status = "\033[93m보통\033[0m"  # 노란색
    else:
        status = "\033[91m위험\033[0m"  # 빨간색
else:
    if person_count <= width*0.7/math.tan(angle):
        status = "\033[92m안전\033[0m"  # 초록색
    elif person_count <= width*1.5*0.7/math.tan(angle):
        status = "\033[93m보통\033[0m"  # 노란색
    else:
        status = "\033[91m위험\033[0m"  # 빨간색

print(f"현재 상태: {status} (감지된 사람 수: {person_count})")

# 좌표 설정
region_points = {
    "region-01": [(764, 364), (816, 416), (516, 464), (778, 622), (100, 361), (140, 270), (260, 261), (376, 394)]
}

# 구역 설정
region = solutions.RegionCounter(
    show=True,
    region=region_points,
    model="./yolov8x.pt"
)

# 결과 이미지 저장
image = results[0].plot()
cv2.imwrite("project/result_obb2.jpg", image)
